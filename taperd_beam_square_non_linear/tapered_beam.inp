
/clear
! parres,new,params,save

*afun,rad
PI=acos(-1)
*afun,deg

/prep7

dapplied=0.01
Nbeams=50
E=29000000
K_target=150000
s_allowable=40000
			
angle=45
nu=0.3
G=(E/(2*(1+nu)))

P=(K_target*dapplied)/Nbeams

eps=10**(-1*6)
L=2.0 ! guess
*do,i,1,10

!500*dapplied**3*E**3*P-((6000*E**3)*P**2*L*s_allowable**2)/G**3-9*L**5*s_allowable**4-(900*dapplied*E**2*P**(5/3)*L**2*s_allowable**(4/3)*(s_allowable/P)**(2/3))/G

	p1=500*dapplied**3*E**3*P-(6000*E**3*P**2*L*s_allowable**2)/G**3
	p2=9*L**5*s_allowable**4
	p3=900*dapplied*E**2*P**(5/3)*L**2*s_allowable**(4/3)
	p4=(p3*(s_allowable/P)**(2/3))/G
	pVal=p1-p2-p4

	p1=500*dapplied**3*E**3*P-(6000*E**3*P**2*L*s_allowable**2)/G**3
	p2=9*L**5*s_allowable**4
	p3=900*dapplied*E**2*P**(5/3)*L**2*s_allowable**(4/3)
	p4=(p3*(s_allowable/P)**(2/3))/G
	pVal1=p1-p2-p4

	L=L+eps
	p1=500*dapplied**3*E**3*P-(6000*E**3*P**2*L*s_allowable**2)/G**3
	p2=9*L**5*s_allowable**4
	p3=900*dapplied*E**2*P**(5/3)*L**2*s_allowable**(4/3)
	p4=(p3*(s_allowable/P)**(2/3))/G
	pVal2=p1-p2-p4
	dpVal=(pVal2-pVal1)/eps

	*if,abs(dpVal),le,1e-6,then
		*exit
	*else
		L=L-pVal/dpVal
	*endif
*enddo
/com,L=%L% after %i% iterations

Tmin=0.01
Tmax=2**(1/6)*3**(1/3)*((L*P)/s_allowable)**(1/3)

L1=L/2
h=0
L2=L1+h

beam_angle=atan(((Tmax-Tmin)/2)/L1)

stress_pred_n_steps=40
*del,stress_pred,,nopr
*dim,stress_pred,array,stress_pred_n_steps,2
*do,x_index,1,stress_pred_n_steps
	x=(x_index-1)*((L1)/(stress_pred_n_steps-1))
	stress_pred(x_index,1)=x
	
	T_x=2**(1/6)*3**(1/3)*(P*(L-2*x)/s_allowable)**(1/3)
	*if,T_x,eq,0,then
		I_x=(0.001)**4/12
	*else
		I_x=T_x**4/12
	*endif
	M_x=P*(x-((L1+L2)/2))
	
	*if,x,le,L1,then
		stress_pred(x_index,2)=(M_x*2**0.5*T_x/2)/I_x
	*elseif,x,le,L1+h/2,then
		stress_pred(x_index,2)=(M_x*2**0.5*T_x/2)/I_x
	*elseif,x,le,L2,then
		stress_pred(x_index,2)=(M_x*2**0.5*T_x/2)/I_x
	*else
		stress_pred(x_index,2)=-1*(M_x*2**0.5*T_x/2)/I_x
	*endif
*enddo
stress_pred_max=s_allowable

!********** build the model **********!

mp,ex,1,E
mp,nuxy,1,nu

et,1,186

csys,0
wpcsys,-1


L_n_steps=100
knum=1
*do,L_index,2,L_n_steps
	L_n1=(L_index-2)*((L1)/(L_n_steps-1))
	L_n2=(L_index-1)*((L1)/(L_n_steps-1))
	
	T_n1=2**(1/6)*3**(1/3)*(P*(L-2*L_n1)/s_allowable)**(1/3)
	T_n2=2**(1/6)*3**(1/3)*(P*(L-2*L_n2)/s_allowable)**(1/3)
	
	*if,L_n2,eq,L1,then
		*if,T_n1,gt,0.001,then
			T_n2=T_n1-0.001
		*else
			T_n2=0.001
		*endif
	*endif
	
	/com,L_n1: %L_n1% T_n1: %T_n1% L_n2: %L_n2% T_n2: %T_n2%
	
	k,,-T_n1/2,T_n1/2,L_n1
	k,,T_n1/2,T_n1/2,L_n1
	k,,T_n1/2,-T_n1/2,L_n1
	k,,-T_n1/2,-T_n1/2,L_n1

	k,,-T_n2/2,T_n2/2,L_n2
	k,,T_n2/2,T_n2/2,L_n2
	k,,T_n2/2,-T_n2/2,L_n2
	k,,-T_n2/2,-T_n2/2,L_n2
	
	v,knum,knum+1,knum+2,knum+3,knum+4,knum+5,knum+6,knum+7
	! ,knum,knum+1,knum+2,knum+3,knum+4,knum+5,knum+6,knum+7
	knum=knum+8

	*if,h,gt,0,then
		k,,-Tmin/2,Tmin/2,L1+h/2
		k,,Tmin/2,Tmin/2,L1+h/2
		k,,Tmin/2,-Tmin/2,L1+h/2
		k,,-Tmin/2,-Tmin/2,L1+h/2
		
		v,5,6,7,8,9,10,11,12
	*endif
*enddo



! smrtsize,off
! lsel,s,loc,z,0
! lsel,a,loc,z,L1
! lesize,all,,,6,-4

alls
*if,h,gt,0,then
	wpoffs,,,L1+h/2
*else
	wpoffs,,,L1
*endif
csys,4
vsymm,z,all

type,1
real,1
mat,1

vglue,all
/view,,1,1,1
/auto
vplot

alls
lsel,u,length,,((L1)/(L_n_steps-1))*0.95,((L1)/(L_n_steps-1))*1.5
lesize,all,,,6,-4
! lsel,u,loc,z,0
! lsel,u,loc,z,L1
! lsel,u,loc,z,L2
! lesize,all,,,40,,,,,0
! lesize,all,0.02,,,,,,,0

alls
vsweep,all

/view,,1,1,1
/auto
eplot


!********** modify beam **********!

! *do,
! *enddo
! T_x=2**(1/6)*3**(1/3)*(P*(L-2*x)/s_allowable)**(1/3)

!********** apply boundary conditions **********!

*get,max_node_num,node,,num,maxd
et,2,21
r,2,1e-20,1e-20,1e-20,1e-20,1e-20,1e-20
type,2
real,2
csys,0
MN_beam_start=max_node_num+1
MN_beam_end=MN_beam_start+1
n,MN_beam_start,0,0,0
n,MN_beam_end,0,0,L1+L2
e,MN_beam_start
e,MN_beam_end

nsel,s,loc,z,0
nsel,a,node,,MN_beam_start
cerig,MN_beam_start,all,all

nsel,s,loc,z,L1+L2
cerig,MN_beam_end,all,all

alls
d,MN_beam_start,all,0
d,MN_beam_end,UX,dapplied*sin(angle)
d,MN_beam_end,UY,dapplied*cos(angle)
d,MN_beam_end,ROTX,0
d,MN_beam_end,ROTY,0
d,MN_beam_end,ROTZ,0


alls
vsum
*get,total_volume,volu,,volu

!********** solve **********!

/solu
alls
solve

!********** post process **********!

/post1

/PLOPTS,INFO,2  
/PLOPTS,LEG1,1  
/PLOPTS,LEG2,0  
/PLOPTS,LEG3,1  
/PLOPTS,FRAME,1 
/PLOPTS,TITLE,1 
/PLOPTS,MINM,1  
/PLOPTS,FILE,0  
/PLOPTS,SPNO,0  
/PLOPTS,LOGO,1  
/PLOPTS,WINS,1  
/PLOPTS,WP,0
/PLOPTS,DATE,0  
/TRIAD,ORIG 

set,last

nsel,s,loc,z,0
nsel,a,loc,z,L1+L2
nsel,a,loc,z,0.98*L1,1.02*L1
esln
nsle
esln
nsle
esln
nsle
esln
cm,BC_E,elem
alls
cmsel,u,BC_E

/cont,1,8
/dscale,1,20
plnsol,u,sum

plnsol,s,1
*get,max_s1,plnsol,,max

nsel,s,loc,z,L1+L2
esln
fsum
*get,fx,fsum,,item,fx
*get,fy,fsum,,item,fy
Freaction=(fx**2+fy**2)**0.5
Stiffness=(Freaction/dapplied)*Nbeams

alls
*if,h,eq,0,then
	path,test,L_n_steps,20,2
	*do,i,1,L_n_steps
		L_n1=(i-1)*((L1)/(L_n_steps-1))
		T_n1=2**(1/6)*3**(1/3)*(P*(L-2*L_n1)/s_allowable)**(1/3)
		ppath,i,node(-T_n1/2,-T_n1/2,L_n1)
	*enddo
*else
	path,test,4,20,stress_pred_n_steps/4
	ppath,1,node(Tmax/2,Tmax/2,L1+L2)
	ppath,2,node(Tmax/2,Tmax/2,L2)
	ppath,3,node(Tmax/2,Tmax/2,L1)
	ppath,4,node(Tmax/2,Tmax/2,0)
*endif

*del,path_data,,nopr
pdef,s1,s,1,avg
pdef,sz,s,z,avg
! prpath,s1
plpath,sz
paget,path_data,table

*get,path_data_length,parm,path_data,dim,x

L1_s=L1/cos(beam_angle)**2
L2_s=L1_s+h
*do,x_index,1,path_data_length
	x=path_data(x_index,4)
	
	*if,x,le,L1_s,then
		path_data(x_index,10)=x*cos(beam_angle)**2
	*elseif,x,le,L2_s,then
		path_data(x_index,10)=(x-L1_s)+L1_s*cos(beam_angle)**2
	*else
		path_data(x_index,10)=L2+(x-L2_s)*cos(beam_angle)**2
	*endif
*enddo

*cfopen,cases,csv,,append

*vwrite,'Case','E','d','s_allowable','N_Beams','L1','h','L2','L','Stiffness Req','P','Stiffness','Stiffness Error','Smax','Smax Error','Volume'
%C,%C,%C,%C,%C,%C,%C,%C,%C,%C,%C,%C,%C,%C,%C,%C
*vwrite,case_num,E,dapplied,s_allowable,Nbeams,L1,h,L2,%L1+L2%,K_target,Freaction,Stiffness,%(Stiffness-K_target)/K_target%,max_s1,%(max_s1-s_allowable)/s_allowable%,total_volume
%G,%G,%G,%G,%G,%G,%G,%G,%G,%G,%G,%G,%G,%G,%G,%G

*cfclos

*cfopen,stress_case_%case_num%,csv
*vwrite,'Path Length (in)','Beam Length (in)','S1 (psi)','SZ (psi)'
%C,%C,%C,%C
*vwrite,path_data(1,4),path_data(1,10),path_data(1,5),path_data(1,6)
%G,%G,%G,%G
*vwrite,'L (in)','Stress Prediction (psi)'
%C,%C
*vwrite,stress_pred(1,1),stress_pred(1,2)
%G,%G
*cfclos











